{"version":3,"sources":["../src/Provider.js"],"names":["isPromise","isPlainValue","Provider","definition","wrap","ignoreDefinition","verifyDefinition","ProviderConstructor","context","prototype","WrappedProviderConstructor","name","providerName","Object","keys","reduce","wrappedProvider","key","originalFunc","args","providerResult","apply","then","result","debugger","send","type","datetime","Date","now","method","isRejected","returnValue","catch","error","Error","forEach"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,SAAxC;;IAEMC,Q;AACJ,oBAAYC,UAAZ,EAAwE;AAAA,mFAAJ,EAAI;AAAA,yBAA9CC,IAA8C;AAAA,QAA9CA,IAA8C,6BAAvC,IAAuC;AAAA,qCAAjCC,gBAAiC;AAAA,QAAjCA,gBAAiC,yCAAd,KAAc;;AAAA;;AACtE,SAAKF,UAAL,GAAkBA,UAAlB;;AAEA,QAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AACpC;AACD;;AAED,QAAI,CAACE,gBAAL,EAAuB;AACrB,WAAKC,gBAAL,CAAsBH,UAAtB;AACD;;AAED,SAAKC,IAAL,GAAYA,IAAZ;;AAEA,SAAKG,mBAAL,GAA2B,UAASC,OAAT,EAAkB;AAC3C,WAAKA,OAAL,GAAeA,OAAf;AACD,KAFD;AAGA,SAAKD,mBAAL,CAAyBE,SAAzB,GAAqCN,UAArC;;AAEA,SAAKO,0BAAL,GAAkC,UAASC,IAAT,EAAeH,OAAf,EAAwB;AACxD,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKI,YAAL,GAAoBD,IAApB;AACD,KAHD;AAIA,SAAKD,0BAAL,CAAgCD,SAAhC,GAA4CI,OAAOC,IAAP,CAC1CT,mBAAmB,EAAnB,GAAwBF,UADkB,EAE1CY,MAF0C,CAEnC,UAACC,eAAD,EAAkBC,GAAlB,EAA0B;AACjC,UAAMC,eAAef,WAAWc,GAAX,CAArB;;AAEAD,sBAAgBC,GAAhB,IAAuB,YAAkB;AAAA;;AAAA,0CAANE,IAAM;AAANA,cAAM;AAAA;;AACvC,YAAMC,iBAAiBF,aAAaG,KAAb,CAAmB,IAAnB,EAAyBF,IAAzB,CAAvB;;AAEA,YAAInB,UAAUoB,cAAV,CAAJ,EAA+B;AAC7B,iBAAOA,eACJE,IADI,CACC,UAACC,MAAD,EAAY;AAChB,kBAAKf,OAAL,CAAagB,QAAb,CAAsBC,IAAtB,CAA2B;AACzBC,oBAAM,UADmB;AAEzBC,wBAAUC,KAAKC,GAAL,EAFe;AAGzBC,sBAAW,MAAKlB,YAAhB,SAAgCK,GAHP;AAIzBE,oBAAMA,IAJmB;AAKzBnB,yBAAW,IALc;AAMzB+B,0BAAY,KANa;AAOzBC,2BAAa/B,aAAasB,MAAb,IACTA,MADS,GAET;AATqB,aAA3B;;AAYA,mBAAOA,MAAP;AACD,WAfI,EAgBJU,KAhBI,CAgBE,UAACC,KAAD,EAAW;AAChB,kBAAK1B,OAAL,CAAagB,QAAb,CAAsBC,IAAtB,CAA2B;AACzBK,sBAAW,MAAKlB,YAAhB,SAAgCK,GADP;AAEzBE,oBAAMA,IAFmB;AAGzBnB,yBAAW,IAHc;AAIzB+B,0BAAY;AAJa,aAA3B;;AAOA,kBAAMG,KAAN;AACD,WAzBI,CAAP;AA0BD;;AAED,aAAK1B,OAAL,CAAagB,QAAb,CAAsBC,IAAtB,CAA2B;AACzBC,gBAAM,UADmB;AAEzBC,oBAAUC,KAAKC,GAAL,EAFe;AAGzBC,kBAAW,KAAKlB,YAAhB,SAAgCK,GAHP;AAIzBE,gBAAMA,IAJmB;AAKzBa,uBAAa/B,aAAamB,cAAb,IACTA,cADS,GAET;AAPqB,SAA3B;;AAUA,eAAOA,cAAP;AACD,OA3CD;;AA6CA,aAAOJ,eAAP;AACD,KAnD2C,EAmDzC,EAnDyC,CAA5C;AAoDD;;;;qCACgBb,U,EAAY;AAC3B,UAAI,KAAKE,gBAAT,EAA2B;AACzB;AACD;;AAED,UAAI,QAAOF,UAAP,yCAAOA,UAAP,OAAsB,QAAtB,IAAkCA,eAAe,IAArD,EAA2D;AACzD,cAAM,IAAIgC,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAEDtB,aAAOC,IAAP,CAAYX,UAAZ,EAAwBiC,OAAxB,CAAgC,UAACnB,GAAD,EAAS;AACvC,YAAI,OAAOd,WAAWc,GAAX,CAAP,KAA2B,UAA/B,EAA2C;AACzC,gBAAM,IAAIkB,KAAJ,mBACYlB,GADZ,yCAAN;AAGD;AACF,OAND;AAOD;;;wBACGT,O,EAAS;AACX,UAAI,OAAO,KAAKL,UAAZ,KAA2B,UAA/B,EAA2C;AACzC,eAAO,KAAKA,UAAL,CAAgBK,OAAhB,CAAP;AACD;;AAED,aAAO,IAAI,KAAKD,mBAAT,CAA6BC,OAA7B,CAAP;AACD;;;+BACUG,I,EAAMH,O,EAAS;AACxB,UAAI,OAAO,KAAKL,UAAZ,KAA2B,UAA/B,EAA2C;AACzC,eAAO,KAAKA,UAAL,CAAgBK,OAAhB,CAAP;AACD;;AAED,aAAO,IAAI,KAAKE,0BAAT,CAAoCC,IAApC,EAA0CH,OAA1C,CAAP;AACD;;;;;;AAGH,eAAeN,QAAf","file":"Provider.js","sourcesContent":["import { isPromise, isPlainValue } from './utils'\n\nclass Provider {\n  constructor(definition, { wrap = true, ignoreDefinition = false } = {}) {\n    this.definition = definition\n\n    if (typeof definition === 'function') {\n      return\n    }\n\n    if (!ignoreDefinition) {\n      this.verifyDefinition(definition)\n    }\n\n    this.wrap = wrap\n\n    this.ProviderConstructor = function(context) {\n      this.context = context\n    }\n    this.ProviderConstructor.prototype = definition\n\n    this.WrappedProviderConstructor = function(name, context) {\n      this.context = context\n      this.providerName = name\n    }\n    this.WrappedProviderConstructor.prototype = Object.keys(\n      ignoreDefinition ? {} : definition\n    ).reduce((wrappedProvider, key) => {\n      const originalFunc = definition[key]\n\n      wrappedProvider[key] = function(...args) {\n        const providerResult = originalFunc.apply(this, args)\n\n        if (isPromise(providerResult)) {\n          return providerResult\n            .then((result) => {\n              this.context.debugger.send({\n                type: 'provider',\n                datetime: Date.now(),\n                method: `${this.providerName}.${key}`,\n                args: args,\n                isPromise: true,\n                isRejected: false,\n                returnValue: isPlainValue(result)\n                  ? result\n                  : '[CAN_NOT_SERIALIZE]',\n              })\n\n              return result\n            })\n            .catch((error) => {\n              this.context.debugger.send({\n                method: `${this.providerName}.${key}`,\n                args: args,\n                isPromise: true,\n                isRejected: true,\n              })\n\n              throw error\n            })\n        }\n\n        this.context.debugger.send({\n          type: 'provider',\n          datetime: Date.now(),\n          method: `${this.providerName}.${key}`,\n          args: args,\n          returnValue: isPlainValue(providerResult)\n            ? providerResult\n            : '[CAN_NOT_SERIALIZE]',\n        })\n\n        return providerResult\n      }\n\n      return wrappedProvider\n    }, {})\n  }\n  verifyDefinition(definition) {\n    if (this.ignoreDefinition) {\n      return\n    }\n\n    if (typeof definition !== 'object' || definition === null) {\n      throw new Error('The definition passed as Provider is not valid')\n    }\n\n    Object.keys(definition).forEach((key) => {\n      if (typeof definition[key] !== 'function') {\n        throw new Error(\n          `The property ${key} passed to Provider is not a method`\n        )\n      }\n    })\n  }\n  get(context) {\n    if (typeof this.definition === 'function') {\n      return this.definition(context)\n    }\n\n    return new this.ProviderConstructor(context)\n  }\n  getWrapped(name, context) {\n    if (typeof this.definition === 'function') {\n      return this.definition(context)\n    }\n\n    return new this.WrappedProviderConstructor(name, context)\n  }\n}\n\nexport default Provider\n"]}