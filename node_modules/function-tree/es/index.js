import { Sequence, Parallel } from './primitives';

export { FunctionTreeExecutionError, FunctionTreeError } from './errors';
export { Primitive } from './primitives';
export { default as createStaticTree } from './staticTree';
export { default as Path } from './Path';

export function sequence() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return new (Function.prototype.bind.apply(Sequence, [null].concat(args)))();
}

export function parallel() {
  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return new (Function.prototype.bind.apply(Parallel, [null].concat(args)))();
}

export { FunctionTree } from './FunctionTree';
export { FunctionTree as default } from './FunctionTree';
export { default as Provider } from './Provider';

export { extractValueWithPath, resolveObject, ResolveValue } from './ResolveValue';
export { createTemplateTag, Tag } from './Tag';
//# sourceMappingURL=index.js.map