var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
   If it walks like a duck and quacks like a duck...
 */
export function isPromise(result) {
  return result && (result instanceof Promise || typeof result.then === 'function' && typeof result.catch === 'function');
}

export function isPlainValue(value) {
  if (value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && !Array.isArray(value) && value.constructor !== Object) {
    return false;
  }

  return true;
}
//# sourceMappingURL=utils.js.map