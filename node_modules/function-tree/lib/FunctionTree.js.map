{"version":3,"sources":["../src/FunctionTree.js"],"names":["createUniqueId","Date","now","Math","floor","random","isValidResult","result","Array","isArray","createErrorObject","error","execution","functionDetails","payload","errorToReturn","Object","assign","_execution","id","functionIndex","toJSON","name","message","stack","FunctionTreeExecution","staticTree","functionTree","errorCallback","datetime","hasThrown","isAsync","runFunction","bind","funcDetails","prevPayload","next","context","createContext","emit","function","then","Path","outputs","FunctionTreeExecutionError","Error","JSON","stringify","keys","catch","contextProviders","newContext","props","path","reduce","output","outputPath","debuggerProvider","debugger","get","currentContext","provider","Provider","wrap","getWrapped","FunctionTree","options","cachedTrees","cachedStaticTrees","executeBranchWrapper","cb","providerKeys","indexOf","resolve","resolveProvider","run","tree","args","slice","call","arguments","forEach","arg","Primitive","withResolveAndReject","reject","treeIdx","push","finalPayload","currentPayload","functionsToResolve","functionsResolved","Promise","EventEmitter"],"mappings":"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","file":"FunctionTree.js","sourcesContent":["import EventEmitter from 'eventemitter3'\nimport executeTree from './executeTree'\nimport createStaticTree from './staticTree'\nimport resolveProvider from './providers/Resolve'\nimport Path from './Path'\nimport Provider from './Provider'\nimport { Primitive } from './primitives'\nimport { FunctionTreeExecutionError } from './errors'\nimport { isPromise } from './utils'\n\n/*\n  Need to create a unique ID for each execution to identify it\n  in debugger\n*/\nfunction createUniqueId() {\n  return Date.now() + '_' + Math.floor(Math.random() * 10000)\n}\n\n/*\n  Validate any returned value from a function. Has\n  to be nothing or an object\n*/\nfunction isValidResult(result) {\n  return !result || (typeof result === 'object' && !Array.isArray(result))\n}\n\n/*\n  Create an error with execution details\n*/\nfunction createErrorObject(error, execution, functionDetails, payload) {\n  const errorToReturn = error\n\n  errorToReturn.execution = execution\n  errorToReturn.functionDetails = functionDetails\n  errorToReturn.payload = Object.assign({}, payload, {\n    _execution: {\n      id: execution.id,\n      functionIndex: functionDetails.functionIndex,\n    },\n    error: error.toJSON\n      ? error.toJSON()\n      : {\n          name: error.name,\n          message: error.message,\n          stack: error.stack,\n        },\n  })\n\n  return errorToReturn\n}\n\nclass FunctionTreeExecution {\n  constructor(name, staticTree, functionTree, errorCallback) {\n    this.id = createUniqueId()\n    this.name = name || staticTree.name || this.id\n    this.staticTree = staticTree\n    this.functionTree = functionTree\n    this.datetime = Date.now()\n    this.errorCallback = errorCallback\n    this.hasThrown = false\n    this.isAsync = false\n\n    this.runFunction = this.runFunction.bind(this)\n  }\n\n  /*\n    Creates the context for the current function to be run,\n    emits events and handles its returned value. Also handles\n    the returned value being a promise\n  */\n  runFunction(funcDetails, payload, prevPayload, next) {\n    if (this.hasThrown) {\n      return\n    }\n\n    const context = this.createContext(funcDetails, payload, prevPayload)\n    const functionTree = this.functionTree\n    const errorCallback = this.errorCallback\n    const execution = this\n    let result\n\n    functionTree.emit('functionStart', execution, funcDetails, payload)\n    try {\n      result = funcDetails.function(context)\n    } catch (error) {\n      this.hasThrown = true\n\n      return errorCallback(\n        createErrorObject(error, execution, funcDetails, payload),\n        execution,\n        funcDetails,\n        payload\n      )\n    }\n\n    /*\n      If result is a promise we want to emit an event and wait for it to resolve to\n      move on\n    */\n    if (isPromise(result)) {\n      functionTree.emit(\n        'asyncFunction',\n        execution,\n        funcDetails,\n        payload,\n        result\n      )\n      this.isAsync = true\n      result\n        .then(function(result) {\n          if (result instanceof Path) {\n            functionTree.emit(\n              'functionEnd',\n              execution,\n              funcDetails,\n              payload,\n              result\n            )\n            next(result.toJSON())\n          } else if (funcDetails.outputs) {\n            functionTree.emit(\n              'functionEnd',\n              execution,\n              funcDetails,\n              payload,\n              result\n            )\n            throw new FunctionTreeExecutionError(\n              execution,\n              funcDetails,\n              payload,\n              new Error(\n                'The result ' +\n                  JSON.stringify(result) +\n                  ' from function ' +\n                  funcDetails.name +\n                  ' needs to be a path of either ' +\n                  Object.keys(funcDetails.outputs)\n              )\n            )\n          } else if (isValidResult(result)) {\n            functionTree.emit(\n              'functionEnd',\n              execution,\n              funcDetails,\n              payload,\n              result\n            )\n            next({\n              payload: result,\n            })\n          } else {\n            functionTree.emit(\n              'functionEnd',\n              execution,\n              funcDetails,\n              payload,\n              result\n            )\n            throw new FunctionTreeExecutionError(\n              execution,\n              funcDetails,\n              payload,\n              new Error(\n                'The result ' +\n                  JSON.stringify(result) +\n                  ' from function ' +\n                  funcDetails.name +\n                  ' is not a valid result'\n              )\n            )\n          }\n        })\n        .catch(function(result) {\n          if (execution.hasThrown) {\n            return\n          }\n\n          if (result instanceof Error) {\n            execution.hasThrown = true\n            errorCallback(\n              createErrorObject(result, execution, funcDetails, payload),\n              execution,\n              funcDetails,\n              payload\n            )\n          } else if (result instanceof Path) {\n            functionTree.emit(\n              'functionEnd',\n              execution,\n              funcDetails,\n              payload,\n              result\n            )\n            next(result.toJSON())\n          } else if (funcDetails.outputs) {\n            let error = new FunctionTreeExecutionError(\n              execution,\n              funcDetails,\n              payload,\n              new Error(\n                'The result ' +\n                  JSON.stringify(result) +\n                  ' from function ' +\n                  funcDetails.name +\n                  ' needs to be a path of either ' +\n                  Object.keys(funcDetails.outputs)\n              )\n            )\n\n            execution.hasThrown = true\n            errorCallback(\n              createErrorObject(error, execution, funcDetails, payload),\n              execution,\n              funcDetails,\n              payload\n            )\n          } else if (isValidResult(result)) {\n            functionTree.emit(\n              'functionEnd',\n              execution,\n              funcDetails,\n              payload,\n              result\n            )\n            next({\n              payload: result,\n            })\n          } else {\n            let error = new FunctionTreeExecutionError(\n              execution,\n              funcDetails,\n              payload,\n              new Error(\n                'The result ' +\n                  JSON.stringify(result) +\n                  ' from function ' +\n                  funcDetails.name +\n                  ' is not a valid result'\n              )\n            )\n            execution.hasThrown = true\n\n            errorCallback(\n              createErrorObject(error, execution, funcDetails, payload),\n              execution,\n              funcDetails,\n              payload\n            )\n          }\n        })\n    } else if (result instanceof Path) {\n      functionTree.emit('functionEnd', execution, funcDetails, payload, result)\n      next(result.toJSON())\n    } else if (funcDetails.outputs) {\n      let error = new FunctionTreeExecutionError(\n        execution,\n        funcDetails,\n        payload,\n        new Error(\n          'The result ' +\n            JSON.stringify(result) +\n            ' from function ' +\n            funcDetails.name +\n            ' needs to be a path of either ' +\n            Object.keys(funcDetails.outputs)\n        )\n      )\n\n      this.hasThrown = true\n      errorCallback(\n        createErrorObject(error, execution, funcDetails, payload),\n        execution,\n        funcDetails,\n        payload\n      )\n    } else if (isValidResult(result)) {\n      functionTree.emit('functionEnd', execution, funcDetails, payload, result)\n      next({\n        payload: result,\n      })\n    } else {\n      let error = new FunctionTreeExecutionError(\n        execution,\n        funcDetails,\n        payload,\n        new Error(\n          'The result ' +\n            JSON.stringify(result) +\n            ' from function ' +\n            funcDetails.name +\n            ' is not a valid result'\n        )\n      )\n      this.hasThrown = true\n\n      errorCallback(\n        createErrorObject(error, execution, funcDetails, payload),\n        execution,\n        funcDetails,\n        payload\n      )\n    }\n  }\n\n  /*\n    Creates the context for the next running function\n  */\n  createContext(functionDetails, payload, prevPayload) {\n    const contextProviders = this.functionTree.contextProviders\n    const newContext = {\n      execution: this,\n      props: payload || {},\n      functionDetails,\n      path: functionDetails.outputs\n        ? Object.keys(functionDetails.outputs).reduce((output, outputPath) => {\n            output[outputPath] = (payload) => new Path(outputPath, payload)\n\n            return output\n          }, {})\n        : null,\n    }\n\n    const debuggerProvider =\n      contextProviders.debugger &&\n      contextProviders.debugger.get(\n        newContext,\n        functionDetails,\n        payload,\n        prevPayload\n      )\n\n    const context = Object.keys(contextProviders).reduce(\n      (currentContext, name) => {\n        const provider = contextProviders[name]\n\n        if (provider instanceof Provider) {\n          currentContext[name] = provider.get(\n            currentContext,\n            functionDetails,\n            payload,\n            prevPayload\n          )\n        } else {\n          currentContext[name] = provider\n        }\n\n        return currentContext\n      },\n      newContext\n    )\n\n    if (debuggerProvider) {\n      return Object.keys(context).reduce((currentContext, name) => {\n        const provider = contextProviders[name]\n\n        if (provider && provider instanceof Provider && provider.wrap) {\n          currentContext[name] =\n            typeof provider.wrap === 'function'\n              ? provider.wrap(context, functionDetails)\n              : provider.getWrapped(name, context)\n        } else {\n          currentContext[name] = context[name]\n        }\n\n        return currentContext\n      }, {})\n    }\n\n    return context\n  }\n}\n\nexport class FunctionTree extends EventEmitter {\n  constructor(contextProviders = {}, options = {}) {\n    super()\n    this.cachedTrees = []\n    this.cachedStaticTrees = []\n    this.executeBranchWrapper =\n      options.executeBranchWrapper ||\n      function(cb) {\n        cb()\n      }\n\n    if (\n      typeof contextProviders !== 'object' ||\n      contextProviders === null ||\n      Array.isArray(contextProviders)\n    ) {\n      throw new Error(\n        'You have to pass an object of context providers to FunctionTree'\n      )\n    }\n\n    const providerKeys = Object.keys(contextProviders)\n\n    if (\n      providerKeys.indexOf('props') >= 0 ||\n      providerKeys.indexOf('path') >= 0 ||\n      providerKeys.indexOf('resolve') >= 0 ||\n      providerKeys.indexOf('execution') >= 0 ||\n      providerKeys.indexOf('debugger') >= 0\n    ) {\n      throw new Error(\n        'You are trying to add a provider with protected key. \"props\", \"path\", \"resolve\", \"execution\" and \"debugger\" are protected'\n      )\n    }\n\n    this.contextProviders = Object.assign({}, contextProviders, {\n      resolve: resolveProvider,\n    })\n\n    this.run = this.run.bind(this)\n  }\n\n  /*\n    Analyses the tree to identify paths and its validity. This analysis\n    is cached. Then the method creates an execution for the tree to run.\n  */\n  run() {\n    let name\n    let tree\n    let payload\n    let cb\n    let staticTree\n    const args = [].slice.call(arguments)\n    args.forEach((arg) => {\n      if (typeof arg === 'string') {\n        name = arg\n      } else if (Array.isArray(arg) || arg instanceof Primitive) {\n        tree = arg\n      } else if (!tree && typeof arg === 'function') {\n        tree = arg\n      } else if (typeof arg === 'function') {\n        cb = arg\n      } else {\n        payload = arg\n      }\n    })\n\n    if (!tree) {\n      throw new Error('function-tree - You did not pass in a function tree')\n    }\n\n    const withResolveAndReject = (resolve, reject) => {\n      const treeIdx = this.cachedTrees.indexOf(tree)\n      if (treeIdx === -1) {\n        staticTree = createStaticTree(name, tree)\n        this.cachedTrees.push(tree)\n        this.cachedStaticTrees.push(staticTree)\n      } else {\n        staticTree = this.cachedStaticTrees[treeIdx]\n      }\n      const execution = new FunctionTreeExecution(\n        name,\n        staticTree,\n        this,\n        (error, execution, funcDetails, finalPayload) => {\n          this.emit('error', error, execution, funcDetails, finalPayload)\n          reject(error)\n        }\n      )\n\n      this.emit('start', execution, payload)\n      executeTree(\n        execution,\n        payload,\n        this.executeBranchWrapper,\n        (funcDetails, path, currentPayload) => {\n          this.emit('pathStart', path, execution, funcDetails, currentPayload)\n        },\n        (currentPayload) => {\n          this.emit('pathEnd', execution, currentPayload)\n        },\n        (currentPayload, functionsToResolve) => {\n          this.emit(\n            'parallelStart',\n            execution,\n            currentPayload,\n            functionsToResolve\n          )\n        },\n        (currentPayload, functionsResolved) => {\n          this.emit(\n            'parallelProgress',\n            execution,\n            currentPayload,\n            functionsResolved\n          )\n        },\n        (currentPayload, functionsResolved) => {\n          this.emit('parallelEnd', execution, currentPayload, functionsResolved)\n        },\n        (finalPayload) => {\n          this.emit('end', execution, finalPayload)\n          resolve === reject\n            ? resolve(null, finalPayload)\n            : resolve(finalPayload)\n        }\n      )\n    }\n\n    if (cb) {\n      withResolveAndReject(cb, cb)\n    } else {\n      return new Promise(withResolveAndReject)\n    }\n  }\n}\n"]}