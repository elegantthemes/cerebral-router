{"version":3,"sources":["../../src/providers/Resolve.js"],"names":["Provider","isTag","arg","Tag","types","length","reduce","isType","type","isResolveValue","ResolveValue","value","overrides","getValue","Object","assign","context","path","getPath","Error","wrap"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;kBAEe,IAAIA,kBAAJ,CACb;AACEC,OADF,iBACQC,GADR,EACuB;AACnB,QAAI,EAAEA,eAAeC,QAAjB,CAAJ,EAA2B;AACzB,aAAO,KAAP;AACD;;AAHkB,sCAAPC,KAAO;AAAPA,WAAO;AAAA;;AAKnB,QAAIA,MAAMC,MAAV,EAAkB;AAChB,aAAOD,MAAME,MAAN,CAAa,UAACC,MAAD,EAASC,IAAT,EAAkB;AACpC,eAAOD,UAAUC,SAASN,IAAIM,IAA9B;AACD,OAFM,EAEJ,KAFI,CAAP;AAGD;;AAED,WAAO,IAAP;AACD,GAbH;AAcEC,gBAdF,0BAciBP,GAdjB,EAcsB;AAClB,WAAOA,eAAeQ,0BAAtB;AACD,GAhBH;AAiBEC,OAjBF,iBAiBQT,GAjBR,EAiB6B;AAAA,QAAhBU,SAAgB,uEAAJ,EAAI;;AACzB,QAAIV,eAAeQ,0BAAnB,EAAiC;AAC/B,aAAOR,IAAIW,QAAJ,CACLD,YAAYE,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKC,OAAvB,EAAgCJ,SAAhC,CAAZ,GAAyD,KAAKI,OADzD,CAAP;AAGD;;AAED,WAAOd,GAAP;AACD,GAzBH;AA0BEe,MA1BF,gBA0BOf,GA1BP,EA0BY;AACR,QAAIA,eAAeC,QAAnB,EAAwB;AACtB,aAAOD,IAAIgB,OAAJ,CAAY,KAAKF,OAAjB,CAAP;AACD;;AAED,UAAM,IAAIG,KAAJ,CACJ,+DADI,CAAN;AAGD;AAlCH,CADa,EAqCb;AACEC,QAAM;AADR,CArCa,C","file":"Resolve.js","sourcesContent":["import Provider from '../Provider'\nimport { ResolveValue } from '../ResolveValue'\nimport { Tag } from '../Tag'\n\nexport default new Provider(\n  {\n    isTag(arg, ...types) {\n      if (!(arg instanceof Tag)) {\n        return false\n      }\n\n      if (types.length) {\n        return types.reduce((isType, type) => {\n          return isType || type === arg.type\n        }, false)\n      }\n\n      return true\n    },\n    isResolveValue(arg) {\n      return arg instanceof ResolveValue\n    },\n    value(arg, overrides = {}) {\n      if (arg instanceof ResolveValue) {\n        return arg.getValue(\n          overrides ? Object.assign({}, this.context, overrides) : this.context\n        )\n      }\n\n      return arg\n    },\n    path(arg) {\n      if (arg instanceof Tag) {\n        return arg.getPath(this.context)\n      }\n\n      throw new Error(\n        'You are extracting a path from an argument that is not a Tag.'\n      )\n    },\n  },\n  {\n    wrap: false,\n  }\n)\n"]}