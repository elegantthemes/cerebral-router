{"version":3,"sources":["../../src/tags/index.js"],"names":["createTemplateTag","extractValueWithPath","resolveObject","ResolveValue","Tag","string","path","signal","context","controller","getSignal","signals","getSignals","state","get","module","props"],"mappings":";;;;;;;AAAA;;;;;yBAGEA,iB;;;;;;yBACAC,oB;;;;;;yBACAC,a;;;;;;yBACAC,Y;;;;;;yBACAC,G;;;AAGK,IAAMC,0BAAS,qCAAkB,QAAlB,EAA4B,UAACC,IAAD,EAAU;AAC1D,SAAOA,IAAP;AACD,CAFqB,CAAf;;AAIA,IAAMC,0BAAS,qCAAkB,QAAlB,EAA4B,UAACD,IAAD,EAAOE,OAAP,EAAmB;AACnE;AACA,MAAI,OAAOA,QAAQD,MAAf,KAA0B,UAA9B,EAA0C;AACxC,WAAOC,QAAQD,MAAR,CAAeD,IAAf,CAAP;AACD;;AAED,SAAOE,QAAQC,UAAR,CAAmBC,SAAnB,CAA6BJ,IAA7B,CAAP;AACD,CAPqB,CAAf;;AASA,IAAMK,4BAAU,qCAAkB,SAAlB,EAA6B,UAACL,IAAD,EAAOE,OAAP,EAAmB;AACrE;AACA,MAAI,OAAOA,QAAQD,MAAf,KAA0B,UAA9B,EAA0C;AACxC,WAAOC,QAAQG,OAAR,CAAgBL,IAAhB,CAAP;AACD;;AAED,SAAOE,QAAQC,UAAR,CAAmBG,UAAnB,CAA8BN,IAA9B,CAAP;AACD,CAPsB,CAAhB;;AASA,IAAMO,wBAAQ,qCAAkB,OAAlB,EAA2B,UAACP,IAAD,EAAOE,OAAP,EAAmB;AACjE;AACA,MAAI,OAAOA,QAAQK,KAAf,KAAyB,UAA7B,EAAyC;AACvC,WAAOL,QAAQK,KAAR,CAAcP,IAAd,CAAP;AACD;;AAED,SAAOE,QAAQK,KAAR,CAAcC,GAAd,CAAkBR,IAAlB,CAAP;AACD,CAPoB,CAAd;;AASA,IAAMS,UAAS,qCAAkB,QAAlB,EAA4B,UAACT,IAAD,EAAOE,OAAP,EAAmB;AACnE,SAAOA,QAAQO,MAAR,CAAeD,GAAf,CAAmBR,IAAnB,CAAP;AACD,CAFqB,CAAf;;;AAIA,IAAMU,wBAAQ,qCAAkB,OAAlB,EAA2B,UAACV,IAAD,EAAOE,OAAP,EAAmB;AACjE;AACA,MAAI,OAAOA,QAAQQ,KAAf,KAAyB,UAA7B,EAAyC;AACvC,WAAOR,QAAQQ,KAAR,CAAcV,IAAd,CAAP;AACD;;AAED,SAAO,wCAAqBE,QAAQQ,KAA7B,EAAoCV,IAApC,CAAP;AACD,CAPoB,CAAd","file":"index.js","sourcesContent":["import { createTemplateTag, extractValueWithPath } from 'function-tree'\n\nexport {\n  createTemplateTag,\n  extractValueWithPath,\n  resolveObject,\n  ResolveValue,\n  Tag,\n} from 'function-tree'\n\nexport const string = createTemplateTag('string', (path) => {\n  return path\n})\n\nexport const signal = createTemplateTag('signal', (path, context) => {\n  // View\n  if (typeof context.signal === 'function') {\n    return context.signal(path)\n  }\n\n  return context.controller.getSignal(path)\n})\n\nexport const signals = createTemplateTag('signals', (path, context) => {\n  // View\n  if (typeof context.signal === 'function') {\n    return context.signals(path)\n  }\n\n  return context.controller.getSignals(path)\n})\n\nexport const state = createTemplateTag('state', (path, context) => {\n  // Computed tracking and View\n  if (typeof context.state === 'function') {\n    return context.state(path)\n  }\n\n  return context.state.get(path)\n})\n\nexport const module = createTemplateTag('module', (path, context) => {\n  return context.module.get(path)\n})\n\nexport const props = createTemplateTag('props', (path, context) => {\n  // Computed tracking and View\n  if (typeof context.props === 'function') {\n    return context.props(path)\n  }\n\n  return extractValueWithPath(context.props, path)\n})\n"]}