'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.props = exports.module = exports.state = exports.signals = exports.signal = exports.string = exports.Tag = exports.ResolveValue = exports.resolveObject = exports.extractValueWithPath = exports.createTemplateTag = undefined;

var _functionTree = require('function-tree');

Object.defineProperty(exports, 'createTemplateTag', {
  enumerable: true,
  get: function get() {
    return _functionTree.createTemplateTag;
  }
});
Object.defineProperty(exports, 'extractValueWithPath', {
  enumerable: true,
  get: function get() {
    return _functionTree.extractValueWithPath;
  }
});
Object.defineProperty(exports, 'resolveObject', {
  enumerable: true,
  get: function get() {
    return _functionTree.resolveObject;
  }
});
Object.defineProperty(exports, 'ResolveValue', {
  enumerable: true,
  get: function get() {
    return _functionTree.ResolveValue;
  }
});
Object.defineProperty(exports, 'Tag', {
  enumerable: true,
  get: function get() {
    return _functionTree.Tag;
  }
});
var string = exports.string = (0, _functionTree.createTemplateTag)('string', function (path) {
  return path;
});

var signal = exports.signal = (0, _functionTree.createTemplateTag)('signal', function (path, context) {
  // View
  if (typeof context.signal === 'function') {
    return context.signal(path);
  }

  return context.controller.getSignal(path);
});

var signals = exports.signals = (0, _functionTree.createTemplateTag)('signals', function (path, context) {
  // View
  if (typeof context.signal === 'function') {
    return context.signals(path);
  }

  return context.controller.getSignals(path);
});

var state = exports.state = (0, _functionTree.createTemplateTag)('state', function (path, context) {
  // Computed tracking and View
  if (typeof context.state === 'function') {
    return context.state(path);
  }

  return context.state.get(path);
});

var _module = (0, _functionTree.createTemplateTag)('module', function (path, context) {
  return context.module.get(path);
});

exports.module = _module;
var props = exports.props = (0, _functionTree.createTemplateTag)('props', function (path, context) {
  // Computed tracking and View
  if (typeof context.props === 'function') {
    return context.props(path);
  }

  return (0, _functionTree.extractValueWithPath)(context.props, path);
});
//# sourceMappingURL=index.js.map