{"version":3,"sources":["../../src/operators/concat.js"],"names":["target","value","concat","context","resolve","isTag","Error","type","path","displayName","String"],"mappings":";;;;;;kBAAe,UAASA,MAAT,EAAiBC,KAAjB,EAAwB;AACrC,WAASC,MAAT,CAAgBC,OAAhB,EAAyB;AACvB,QAAI,CAACA,QAAQC,OAAR,CAAgBC,KAAhB,CAAsBL,MAAtB,EAA8B,OAA9B,EAAuC,QAAvC,CAAL,EAAuD;AACrD,YAAM,IAAIM,KAAJ,CACJ,qFADI,CAAN;AAGD;;AAEDH,YAAQH,OAAOO,IAAf,EAAqBL,MAArB,CACEC,QAAQC,OAAR,CAAgBI,IAAhB,CAAqBR,MAArB,CADF,EAEEG,QAAQC,OAAR,CAAgBH,KAAhB,CAAsBA,KAAtB,CAFF;AAID;;AAEDC,SAAOO,WAAP,wBAAwCC,OAAOV,MAAP,CAAxC,UAA2DU,OAAOT,KAAP,CAA3D;;AAEA,SAAOC,MAAP;AACD,C","file":"concat.js","sourcesContent":["export default function(target, value) {\n  function concat(context) {\n    if (!context.resolve.isTag(target, 'state', 'module')) {\n      throw new Error(\n        'Cerebral operator.concat: You have to use the STATE or MODULE tag as first argument'\n      )\n    }\n\n    context[target.type].concat(\n      context.resolve.path(target),\n      context.resolve.value(value)\n    )\n  }\n\n  concat.displayName = `operator.concat(${String(target)}, ${String(value)})`\n\n  return concat\n}\n"]}