'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (target, value) {
  function set(_ref) {
    var state = _ref.state,
        module = _ref.module,
        props = _ref.props,
        resolve = _ref.resolve;

    if (!resolve.isTag(target, 'state', 'props', 'module')) {
      throw new Error('Cerebral operator.set: You have to use the STATE, PROPS or MODULE tag as first argument');
    }

    var resolvedValue = resolve.value(value);

    if (!resolve.isResolveValue(value) && (0, _utils.isObject)(value)) {
      resolvedValue = Object.assign({}, resolvedValue);
    } else if (!resolve.isResolveValue(value) && Array.isArray(value)) {
      resolvedValue = resolvedValue.slice();
    }

    if (target.type === 'state') {
      state.set(resolve.path(target), resolvedValue);
    } else if (target.type === 'module') {
      module.set(resolve.path(target), resolvedValue);
    } else {
      var result = Object.assign({}, props);
      var parts = resolve.path(target).split('.');
      var key = parts.pop();
      var targetObj = parts.reduce(function (target, key) {
        return target[key] = Object.assign({}, target[key] || {});
      }, result);
      targetObj[key] = resolvedValue;

      return result;
    }
  }

  set.displayName = 'operator.set(' + String(target) + ', ' + String(value) + ')';

  return set;
};

var _utils = require('../utils');
//# sourceMappingURL=set.js.map