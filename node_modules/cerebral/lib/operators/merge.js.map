{"version":3,"sources":["../../src/operators/merge.js"],"names":["target","values","merge","context","resolve","isTag","Error","type","path","map","value","Object","keys","reduce","currentValue","key","displayName","String","join"],"mappings":";;;;;;kBAAe,UAASA,MAAT,EAA4B;AAAA,oCAARC,MAAQ;AAARA,UAAQ;AAAA;;AACzC,WAASC,KAAT,CAAeC,OAAf,EAAwB;AAAA;;AACtB,QAAI,CAACA,QAAQC,OAAR,CAAgBC,KAAhB,CAAsBL,MAAtB,EAA8B,OAA9B,EAAuC,QAAvC,CAAL,EAAuD;AACrD,YAAM,IAAIM,KAAJ,CACJ,oFADI,CAAN;AAGD;;AAED,oCAAQN,OAAOO,IAAf,GAAqBL,KAArB,8BACEC,QAAQC,OAAR,CAAgBI,IAAhB,CAAqBR,MAArB,CADF,4BAEKC,OAAOQ,GAAP,CAAW,UAACC,KAAD,EAAW;AACvB,UAAIP,QAAQC,OAAR,CAAgBC,KAAhB,CAAsBK,KAAtB,CAAJ,EAAkC;AAChC,eAAOP,QAAQC,OAAR,CAAgBM,KAAhB,CAAsBA,KAAtB,CAAP;AACD;;AAED,aAAOC,OAAOC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,UAACC,YAAD,EAAeC,GAAf,EAAuB;AACtDD,qBAAaC,GAAb,IAAoBZ,QAAQC,OAAR,CAAgBM,KAAhB,CAAsBA,MAAMK,GAAN,CAAtB,CAApB;;AAEA,eAAOD,YAAP;AACD,OAJM,EAIJ,EAJI,CAAP;AAKD,KAVE,CAFL;AAcD;;AAEDZ,QAAMc,WAAN,uBAAsCC,OAAOjB,MAAP,CAAtC,UAAyDC,OACtDQ,GADsD,CAClD,UAACC,KAAD,EAAW;AACd,WAAOO,OAAOP,KAAP,CAAP;AACD,GAHsD,EAItDQ,IAJsD,CAIjD,GAJiD,CAAzD;;AAMA,SAAOhB,KAAP;AACD,C","file":"merge.js","sourcesContent":["export default function(target, ...values) {\n  function merge(context) {\n    if (!context.resolve.isTag(target, 'state', 'module')) {\n      throw new Error(\n        'Cerebral operator.merge: You have to use the STATE or MODULE tag as first argument'\n      )\n    }\n\n    context[target.type].merge(\n      context.resolve.path(target),\n      ...values.map((value) => {\n        if (context.resolve.isTag(value)) {\n          return context.resolve.value(value)\n        }\n\n        return Object.keys(value).reduce((currentValue, key) => {\n          currentValue[key] = context.resolve.value(value[key])\n\n          return currentValue\n        }, {})\n      })\n    )\n  }\n\n  merge.displayName = `operator.merge(${String(target)}, ${values\n    .map((value) => {\n      return String(value)\n    })\n    .join(',')})`\n\n  return merge\n}\n"]}