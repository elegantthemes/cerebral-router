{"version":3,"sources":["../src/Module.js"],"names":["Module","moduleDescription","controller","path","stringPath","join","moduleStub","name","slice","pop","module","Object","assign","signals","keys","reduce","currentSignals","signalKey","signal","Array","isArray","run","payload","runSignal","concat","modules","registered","moduleKey","create","Error"],"mappings":";;;;;;;;AAAA;;AACA;;;;IAEMA,M;AACJ,kBAAYC,iBAAZ,EAA+B;AAAA;;AAC7B,SAAKA,iBAAL,GAAyBA,iBAAzB;AACD;;;;2BACMC,U,EAAYC,I,EAAM;AACvB,UAAMC,aAAaD,KAAKE,IAAL,CAAU,GAAV,CAAnB;AACA,UAAMC,aAAa;AACjBJ,8BADiB;AAEjBC,cAAMC,UAFW;AAGjBG,cAAMJ,KAAKK,KAAL,GAAaC,GAAb;AAHW,OAAnB;;AAMA,UAAMC,SACJ,OAAO,KAAKT,iBAAZ,KAAkC,UAAlC,GACI,KAAKA,iBAAL,CAAuBK,UAAvB,CADJ,GAEIK,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKX,iBAAvB,CAHN;;AAKA;AACAS,aAAOG,OAAP,GAAiBF,OAAOG,IAAP,CAAYJ,OAAOG,OAAP,IAAkB,EAA9B,EAAkCE,MAAlC,CACf,UAACC,cAAD,EAAiBC,SAAjB,EAA+B;AAC7B,YAAMC,SAASR,OAAOG,OAAP,CAAeI,SAAf,CAAf;AACA,YACE,EACEC,WACCC,MAAMC,OAAN,CAAcF,MAAd,KACC,OAAOA,MAAP,KAAkB,UADnB,IAECA,yCAHF,CADF,CADF,EAOE;AACA,wDACuBD,SADvB;AAGD;AACDD,uBAAeC,SAAf,IAA4B;AAC1BC,kBAAQA,MADkB;AAE1BG,aAF0B,eAEtBC,OAFsB,EAEb;AACXpB,uBAAWqB,SAAX,CACEpB,KAAKqB,MAAL,CAAYP,SAAZ,EAAuBZ,IAAvB,CAA4B,GAA5B,CADF,EAEEa,MAFF,EAGEI,OAHF;AAKD;AARyB,SAA5B;;AAWA,eAAON,cAAP;AACD,OA3Bc,EA4Bf,EA5Be,CAAjB;;AA+BA;AACAN,aAAOe,OAAP,GAAiBd,OAAOG,IAAP,CAAYJ,OAAOe,OAAP,IAAkB,EAA9B,EAAkCV,MAAlC,CACf,UAACW,UAAD,EAAaC,SAAb,EAA2B;AACzB,YAAI,CAACjB,OAAOe,OAAP,CAAeE,SAAf,EAA0BC,MAA/B,EAAuC;AACrC,gBAAM,IAAIC,KAAJ,sDAC+CF,SAD/C,OAAN;AAGD;;AAEDD,mBAAWC,SAAX,IAAwBjB,OAAOe,OAAP,CAAeE,SAAf,EAA0BC,MAA1B,CACtB1B,UADsB,EAEtBC,KAAKqB,MAAL,CAAYG,SAAZ,CAFsB,CAAxB;;AAKA,eAAOD,UAAP;AACD,OAdc,EAef,EAfe,CAAjB;;AAkBA,aAAOhB,MAAP;AACD;;;;;;kBAGYV,M","file":"Module.js","sourcesContent":["import { throwError } from './utils'\nimport { Primitive } from 'function-tree'\n\nclass Module {\n  constructor(moduleDescription) {\n    this.moduleDescription = moduleDescription\n  }\n  create(controller, path) {\n    const stringPath = path.join('.')\n    const moduleStub = {\n      controller,\n      path: stringPath,\n      name: path.slice().pop(),\n    }\n\n    const module =\n      typeof this.moduleDescription === 'function'\n        ? this.moduleDescription(moduleStub)\n        : Object.assign({}, this.moduleDescription)\n\n    /* Convert arrays to actually runable signals */\n    module.signals = Object.keys(module.signals || {}).reduce(\n      (currentSignals, signalKey) => {\n        const signal = module.signals[signalKey]\n        if (\n          !(\n            signal &&\n            (Array.isArray(signal) ||\n              typeof signal === 'function' ||\n              signal instanceof Primitive)\n          )\n        ) {\n          throwError(\n            `Signal with name \"${signalKey}\" is not correctly defined. Please check that the signal is either a sequence, an array or a function.`\n          )\n        }\n        currentSignals[signalKey] = {\n          signal: signal,\n          run(payload) {\n            controller.runSignal(\n              path.concat(signalKey).join('.'),\n              signal,\n              payload\n            )\n          },\n        }\n\n        return currentSignals\n      },\n      {}\n    )\n\n    /* Instantiate submodules */\n    module.modules = Object.keys(module.modules || {}).reduce(\n      (registered, moduleKey) => {\n        if (!module.modules[moduleKey].create) {\n          throw new Error(\n            `You are not using the Module factory on module \"${moduleKey}\"`\n          )\n        }\n\n        registered[moduleKey] = module.modules[moduleKey].create(\n          controller,\n          path.concat(moduleKey)\n        )\n\n        return registered\n      },\n      {}\n    )\n\n    return module\n  }\n}\n\nexport default Module\n"]}