{"version":3,"sources":["../src/BaseController.js"],"names":["BaseController","rootModule","options","functionTreeOptions","Model","devtools","stateChanges","window","CEREBRAL_STATE","throwToConsole","preventInitialize","getSignal","getSignals","module","create","model","emit","contextProviders","Object","assign","controller","state","StateProvider","debugger","keys","forEach","statePath","set","init","navigator","test","userAgent","console","warn","on","execution","functionDetails","payload","JSON","stringify","e","name","propsToAdd","preventPropsReplacement","key","Error","path","get","signal","reduce","currentPayload","allowedTypes","run","error","signalPath","catchingResult","details","index","currentModule","catch","catchingModule","modules","errorType","signalChain","runSignal","setTimeout","log","message","isAsync","pathArray","signalKey","pop","undefined","signals","modulePath","callableSignals","moduleKey","parentModule","newModule","providers","split","flush","provider"],"mappings":"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","file":"BaseController.js","sourcesContent":["import FunctionTree from 'function-tree'\nimport Module from './Module'\nimport {\n  ensurePath,\n  isDeveloping,\n  throwError,\n  isSerializable,\n  forceSerializable,\n  isObject,\n  getProviders,\n  getModule,\n  cleanPath,\n} from './utils'\nimport DebuggerProvider from './providers/Debugger'\nimport ModuleProvider from './providers/Module'\n\n/*\n  The controller is where everything is attached. The devtools\n  is attached directly. Also a top level module is created.\n  The controller creates the function tree that will run all signals,\n  based on top level providers and providers defined in modules\n*/\nclass BaseController extends FunctionTree {\n  constructor(rootModule, options, functionTreeOptions) {\n    super({}, functionTreeOptions)\n    const {\n      Model,\n      devtools = null,\n      stateChanges = typeof window !== 'undefined' && window.CEREBRAL_STATE,\n      throwToConsole = true,\n      preventInitialize = false,\n    } = options\n    const getSignal = this.getSignal\n    const getSignals = this.getSignals\n\n    this.getSignal = () => {\n      throwError(\n        'You are grabbing a signal before controller has initialized, please wait for \"initialized\" event'\n      )\n    }\n\n    this.getSignals = () => {\n      throwError(\n        'You are grabbing a signals before controller has initialized, please wait for \"initialized\" event'\n      )\n    }\n\n    if (!(rootModule instanceof Module)) {\n      throwError(\n        'You did not pass a root module to the controller. The first argument has to be a module'\n      )\n    }\n\n    this.throwToConsole = throwToConsole\n\n    this.devtools = devtools\n    this.module = rootModule.create(this, [])\n    this.model = new Model(this)\n\n    if (!preventInitialize) {\n      this.emit('initialized:model')\n    }\n\n    this.contextProviders = Object.assign(\n      this.contextProviders,\n      getProviders(this.module),\n      {\n        controller: this,\n        state: this.model.StateProvider(this.devtools),\n        module: ModuleProvider(this.devtools),\n      },\n      this.devtools\n        ? {\n            debugger: DebuggerProvider(this.devtools),\n          }\n        : {}\n    )\n\n    if (stateChanges) {\n      Object.keys(stateChanges).forEach((statePath) => {\n        this.model.set(ensurePath(statePath), stateChanges[statePath])\n      })\n    }\n\n    if (this.devtools) {\n      this.devtools.init(this)\n    }\n\n    if (\n      !this.devtools &&\n      isDeveloping() &&\n      typeof navigator !== 'undefined' &&\n      /Chrome/.test(navigator.userAgent)\n    ) {\n      console.warn(\n        'You are not using the Cerebral devtools. It is highly recommended to use it in combination with the debugger: https://cerebraljs.com/docs/introduction/debugger.html'\n      )\n    }\n\n    if (isDeveloping()) {\n      this.on('functionStart', (execution, functionDetails, payload) => {\n        try {\n          JSON.stringify(payload)\n        } catch (e) {\n          throwError(\n            `The function ${functionDetails.name} in signal ${\n              execution.name\n            } is not given a valid payload`\n          )\n        }\n      })\n      this.on(\n        'functionEnd',\n        (execution, functionDetails, payload, propsToAdd) => {\n          if (devtools && devtools.preventPropsReplacement) {\n            Object.keys(propsToAdd || {}).forEach((key) => {\n              if (key in payload) {\n                throw new Error(\n                  `Cerebral Devtools - You have activated the \"preventPropsReplacement\" option and in signal \"${\n                    execution.name\n                  }\", before the action \"${\n                    functionDetails.name\n                  }\", the key \"${key}\" was replaced`\n                )\n              }\n            })\n          }\n        }\n      )\n    }\n\n    this.getSignal = getSignal\n    this.getSignals = getSignals\n\n    if (!preventInitialize) {\n      this.emit('initialized')\n    }\n  }\n  /*\n    Conveniance method for grabbing the model\n  */\n  getModel() {\n    return this.model\n  }\n  /*\n    Method called by view to grab state\n  */\n  getState(path) {\n    return this.model.get(ensurePath(cleanPath(path)))\n  }\n  /*\n    Uses function tree to run the array and optional\n    payload passed in. The payload will be checkd\n  */\n  runSignal(name, signal, payload = {}) {\n    if (this.devtools && (!isObject(payload) || !isSerializable(payload))) {\n      console.warn(\n        `You passed an invalid payload to signal \"${name}\". Only serializable payloads can be passed to a signal. The payload has been ignored. This is the object:`,\n        payload\n      )\n      payload = {}\n    }\n\n    if (this.devtools) {\n      payload = Object.keys(payload).reduce((currentPayload, key) => {\n        if (!isSerializable(payload[key], this.devtools.allowedTypes)) {\n          console.warn(\n            `You passed an invalid payload to signal \"${name}\", on key \"${key}\". Only serializable values like Object, Array, String, Number and Boolean can be passed in. Also these special value types:`,\n            this.devtools.allowedTypes\n          )\n\n          return currentPayload\n        }\n\n        currentPayload[key] = forceSerializable(payload[key])\n\n        return currentPayload\n      }, {})\n    }\n\n    this.run(name, signal, payload, (error) => {\n      if (error) {\n        const signalPath = ensurePath(error.execution.name)\n        const catchingResult = signalPath.reduce(\n          (details, key, index) => {\n            if (details.currentModule.catch) {\n              details.catchingModule = details.currentModule\n            }\n\n            details.currentModule = details.currentModule.modules[key]\n\n            return details\n          },\n          {\n            currentModule: this.module,\n            catchingModule: null,\n          }\n        )\n\n        if (catchingResult.catchingModule) {\n          for (let [errorType, signalChain] of catchingResult.catchingModule\n            .catch) {\n            if (error instanceof errorType) {\n              this.runSignal('catch', signalChain, error.payload)\n\n              // Throw the error to console even if handling it\n              if (this.throwToConsole) {\n                setTimeout(() => {\n                  console.log(\n                    `Cerebral is handling error \"${error.name}: ${\n                      error.message\n                    }\" thrown by signal \"${\n                      error.execution.name\n                    }\". Check debugger for more information.`\n                  )\n                })\n              }\n\n              return\n            }\n          }\n        }\n\n        if (error.execution.isAsync) {\n          setTimeout(() => {\n            throw error\n          })\n        } else {\n          throw error\n        }\n      }\n    })\n  }\n  /*\n    Returns a function which binds the name/path of signal,\n    and the array. This allows view layer to just call it with\n    an optional payload and it will run\n  */\n  getSignal(path) {\n    const pathArray = ensurePath(path)\n    const signalKey = pathArray.pop()\n    const module = pathArray.reduce((currentModule, key) => {\n      return currentModule ? currentModule.modules[key] : undefined\n    }, this.module)\n    const signal = module && module.signals[signalKey]\n\n    if (!signal) {\n      throwError(\n        `The signal on path \"${path}\" does not exist, please check path`\n      )\n    }\n\n    return signal && signal.run\n  }\n  getSignals(modulePath) {\n    const pathArray = ensurePath(modulePath)\n    const module = pathArray.reduce((currentModule, key) => {\n      return currentModule ? currentModule.modules[key] : undefined\n    }, this.module)\n\n    const signals = module && module.signals\n\n    if (!signals) {\n      return undefined\n    }\n\n    const callableSignals = {}\n    for (const name in signals) {\n      const signal = signals[name].run\n      callableSignals[name] = signal\n    }\n\n    return callableSignals\n  }\n  addModule(path, module) {\n    const pathArray = ensurePath(path)\n    const moduleKey = pathArray.pop()\n    const parentModule = getModule(pathArray, this.module)\n    const newModule = module.create(this, ensurePath(path))\n    parentModule.modules[moduleKey] = newModule\n\n    if (newModule.providers) {\n      Object.assign(this.contextProviders, newModule.providers)\n    }\n\n    this.emit('moduleAdded', path.split('.'), newModule)\n\n    this.flush()\n  }\n  removeModule(path) {\n    if (!path) {\n      console.warn('Controller.removeModule requires a Module Path')\n      return null\n    }\n\n    const pathArray = ensurePath(path)\n    const moduleKey = pathArray.pop()\n    const parentModule = getModule(pathArray, this.module)\n\n    const module = parentModule.modules[moduleKey]\n\n    if (module.providers) {\n      Object.keys(module.providers).forEach((provider) => {\n        delete this.contextProviders[provider]\n      })\n    }\n\n    delete parentModule.modules[moduleKey]\n\n    this.emit('moduleRemoved', ensurePath(path), module)\n\n    this.flush()\n  }\n}\n\nexport default BaseController\n"]}