{"version":3,"sources":["../../src/test/snapshot.js"],"names":["Action","name","Mutation","mutation","method","path","args","shift","join","Provider","provider","Path","SnapshotDevtool","isConnected","ws","onopen","onerror","onclose","send","data","execution","functionDetails","type","functionIndex","MockedProvider","mocks","providerName","context","definition","WrappedProviderConstructor","prototype","Object","keys","reduce","mockedProvider","key","debugger","nextMock","Error","isAsync","isResolved","Promise","resolve","value","reject","notWrappedProviders","Snapshot","rootModule","controller","devtools","host","preventInitialize","flush","createMockedProviders","providers","contextProviders","wrappedProviders","indexOf","model","apply","concat","push","signalPath","payload","staticTree","pathArray","signalKey","pop","module","currentModule","modules","undefined","signal","signals","update","on","run","error"],"mappings":"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","file":"snapshot.js","sourcesContent":["import { Controller } from '../'\nimport { Provider as FTProvider } from 'function-tree'\nimport { DevtoolsBase } from 'function-tree/devtools'\nimport { ensurePath } from '../utils'\n\nclass Action {\n  constructor(name) {\n    this.name = name\n  }\n}\n\nclass Mutation {\n  constructor(mutation) {\n    this.method = mutation.method\n    this.path = mutation.args.shift().join('.')\n    this.args = mutation.args\n  }\n}\n\nclass Provider {\n  constructor(provider) {\n    this.method = provider.method\n    this.args = provider.args\n  }\n}\n\nclass Path {\n  constructor(name) {\n    this.name = name\n  }\n}\n\nclass SnapshotDevtool extends DevtoolsBase {\n  createSocket() {\n    this.isConnected = true\n    this.ws = {\n      onopen() {},\n      onerror() {},\n      onclose() {},\n      send(...args) {},\n    }\n  }\n  createExecutionMessage(data, execution, functionDetails) {\n    return {\n      type: data.type || 'provider',\n      functionIndex: functionDetails.functionIndex,\n      method: data.method,\n      args: data.args,\n    }\n  }\n  updateComponentsMap() {}\n}\n\nclass MockedProvider extends FTProvider {\n  constructor(name, provider, mocks) {\n    super({})\n    this.name = name\n    this.provider = provider\n    this.mocks = mocks\n  }\n  getWrapped(providerName, context) {\n    const definition = this.provider.WrappedProviderConstructor.prototype\n    return Object.keys(definition).reduce((mockedProvider, key) => {\n      mockedProvider[key] = (...args) => {\n        context.debugger.send({\n          method: `${providerName}.${key}`,\n          args: args,\n        })\n\n        const nextMock = this.mocks.shift()\n\n        if (!nextMock) {\n          throw new Error(\n            `\"${this.name}.${key}\" was called, but there is no mock for it`\n          )\n        }\n\n        if (nextMock.path !== `${this.name}.${key}`) {\n          throw new Error(\n            `The expected mock \"${nextMock.path}\" does not match \"${\n              this.name\n            }.${key}\"`\n          )\n        }\n\n        if (nextMock.isAsync) {\n          return nextMock.isResolved\n            ? Promise.resolve(nextMock.value)\n            : Promise.reject(nextMock.value)\n        }\n\n        return nextMock.value\n      }\n\n      return mockedProvider\n    }, {})\n  }\n}\n\nconst notWrappedProviders = ['state', 'resolve', 'module', 'debugger']\n\nclass Snapshot {\n  constructor(rootModule) {\n    this.controller = Controller(rootModule, {\n      devtools: new SnapshotDevtool({\n        host: 'local',\n      }),\n      preventInitialize: true,\n    })\n    this.controller.flush = () => {}\n    this.mocks = []\n    this.execution = []\n\n    this.createMockedProviders()\n  }\n  createMockedProviders() {\n    const providers = this.controller.contextProviders\n\n    this.controller.contextProviders = Object.keys(providers).reduce(\n      (wrappedProviders, provider) => {\n        if (\n          providers[provider] instanceof FTProvider &&\n          notWrappedProviders.indexOf(provider) === -1\n        ) {\n          wrappedProviders[provider] = new MockedProvider(\n            provider,\n            providers[provider],\n            this.mocks\n          )\n        } else {\n          wrappedProviders[provider] = providers[provider]\n        }\n\n        return wrappedProviders\n      },\n      {}\n    )\n  }\n  mutate(method, path, ...args) {\n    this.controller.model[method].apply(\n      this.controller.model,\n      [ensurePath(path)].concat(args)\n    )\n\n    return this\n  }\n  mock(path, value) {\n    this.mocks.push({ path, value })\n\n    return this\n  }\n  mockResolvedPromise(path, value) {\n    this.mocks.push({ path, value, isAsync: true, isResolved: true })\n\n    return this\n  }\n  mockRejectedPromise(path, value) {\n    this.mocks.push({ path, value, isAsync: true, isResolved: false })\n\n    return this\n  }\n  run(signalPath, payload) {\n    if (this.staticTree) {\n      throw new Error('You have already run this snapshot')\n    }\n\n    return new Promise((resolve, reject) => {\n      const pathArray = ensurePath(signalPath)\n      const signalKey = pathArray.pop()\n      const module = pathArray.reduce((currentModule, key) => {\n        return currentModule ? currentModule.modules[key] : undefined\n      }, this.controller.module)\n      const signal = module && module.signals[signalKey]\n\n      if (!signal) {\n        throw new Error(\n          `The signal on path \"${signalPath}\" does not exist, please check path`\n        )\n      }\n\n      this.controller.devtools.ws.send = (update) => {\n        if (update.type === 'mutation') {\n          this.execution.push(new Mutation(update))\n        } else if (update.type === 'provider') {\n          this.execution.push(new Provider(update))\n        }\n      }\n\n      this.controller.on('functionStart', (execution, functionDetails) => {\n        this.execution.push(new Action(functionDetails.name))\n      })\n\n      this.controller.on('pathStart', (name) => {\n        this.execution.push(new Path(name))\n      })\n\n      this.controller.run(signalPath, signal.signal, payload, (error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve(this)\n        }\n      })\n    })\n  }\n  get() {\n    return this.execution\n  }\n}\n\nexport default (rootModule) => {\n  return new Snapshot(rootModule)\n}\n"]}