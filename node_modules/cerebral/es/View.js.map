{"version":3,"sources":["../src/View.js"],"names":["DependencyTracker","Compute","getChangedProps","throwError","ensureStrictPath","createResolver","getStateTreeProp","noop","View","dependencies","mergeProps","props","controller","displayName","onUpdate","stateGetter","bind","signalGetter","signalsGetter","_displayName","_hasWarnedBigComponent","isUnmounted","updateComponent","propKeys","Object","keys","_verifyPropsWarned","devtools","warnStateProps","verifyProps","dependencyTrackers","reduce","currentDependencyTrackers","dependencyKey","run","dependencyTrackersDependencyMaps","getDependencyTrackersDependencyMaps","tagsDependencyMap","getTagsDependencyMap","path","getState","getSignal","e","modulePath","getSignals","key","console","warn","Array","isArray","depsMap","assign","state","componentDependencyStore","addEntity","updateComponentsMap","removeEntity","nextProps","propsChanges","length","updateFromProps","update","updateDependencyTrackers","stateChanges","force","forceUpdateDependencyTrackers","hasChanged","match","hasChangedDependencyTrackers","prevDependencyTrackersDependencyMaps","previousTagsDependencyMap","prevDepsMap","nextDepsMap","updateEntity","forEach","currentDepsMaps","propKey","stateTrackFlatMap","propsTrackFlatMap","currentDepsMap","getTags","getters","createTagGetters","updatedCurrentDepsMap","tag","type","getPath","strictPath","signal","signals","includeProps","dependenciesProps","currentProps","value","substr","getValue","bigComponentsWarning"],"mappings":"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","file":"View.js","sourcesContent":["import DependencyTracker from './DependencyTracker'\nimport { Compute } from './Compute'\nimport {\n  getChangedProps,\n  throwError,\n  ensureStrictPath,\n  createResolver,\n  getStateTreeProp,\n  noop,\n} from './utils'\n\nclass View {\n  constructor({\n    dependencies,\n    mergeProps,\n    props,\n    controller,\n    displayName,\n    onUpdate,\n  }) {\n    if (typeof dependencies === 'function') {\n      throwError(\n        'You can not use a function to define dependencies. Use tags or a function on the specific property you want to dynamically create'\n      )\n    }\n\n    if (!dependencies) {\n      throwError(\n        'There is no reason to connect a component that has no dependencies'\n      )\n    }\n    this.stateGetter = this.stateGetter.bind(this)\n    this.signalGetter = this.signalGetter.bind(this)\n    this.signalsGetter = this.signalsGetter.bind(this)\n    this.mergeProps = mergeProps\n    this.controller = controller\n    this._displayName = displayName\n    this._hasWarnedBigComponent = false\n    this.isUnmounted = false\n    this.updateComponent = onUpdate || noop\n    this.propKeys = Object.keys(props || {})\n    this._verifyPropsWarned = false\n\n    if (this.controller.devtools && this.controller.devtools.warnStateProps) {\n      this.verifyProps(props)\n    }\n\n    /*\n      First we find any dependency functions to convert to DependencyTrackers.\n      They are instantly run to produce their value and map of state\n      dependencies\n    */\n    this.dependencyTrackers = Object.keys(dependencies).reduce(\n      (currentDependencyTrackers, dependencyKey) => {\n        if (dependencies[dependencyKey] instanceof Compute) {\n          currentDependencyTrackers[dependencyKey] = new DependencyTracker(\n            dependencies[dependencyKey]\n          )\n          currentDependencyTrackers[dependencyKey].run(this.stateGetter, props)\n        }\n\n        return currentDependencyTrackers\n      },\n      {}\n    )\n    this.dependencies = dependencies\n    this.dependencyTrackersDependencyMaps = this.getDependencyTrackersDependencyMaps(\n      props\n    )\n    this.tagsDependencyMap = this.getTagsDependencyMap(props)\n  }\n  /*\n    A getter for StateTracker and tags to grab state from Cerebral\n  */\n  stateGetter(path) {\n    return this.controller.getState(path)\n  }\n  /*\n    A getter for tags to grab signals from Cerebral\n  */\n  signalGetter(path) {\n    try {\n      return this.controller.getSignal(path)\n    } catch (e) {}\n  }\n  /*\n    A getter for tags to grab signals of module from Cerebral\n  */\n  signalsGetter(modulePath) {\n    return this.controller.getSignals(modulePath)\n  }\n  /*\n    A method to ensure objects and arrays from state tree are not passed as props\n  */\n  verifyProps(props) {\n    const key = getStateTreeProp(props)\n\n    if (key && !this._verifyPropsWarned) {\n      console.warn(\n        `You are passing an ${\n          Array.isArray(props[key]) ? 'array' : 'object'\n        } to the component \"${\n          this._displayName\n        }\" on prop \"${key}\" which is from the Cerebral state tree. You should not do this, but rather connect it directly to this component. This will optimize the component and avoid any rerender issues.`\n      )\n      this._verifyPropsWarned = true\n    }\n  }\n  mount() {\n    const depsMap = Object.assign(\n      {},\n      this.dependencyTrackersDependencyMaps.state,\n      this.tagsDependencyMap\n    )\n\n    this.controller.componentDependencyStore.addEntity(this, depsMap)\n\n    if (this.controller.devtools) {\n      this.controller.devtools.updateComponentsMap(this, depsMap)\n    }\n  }\n  onUpdate(...args) {\n    if (this.isUnmounted) {\n      return\n    }\n\n    this.updateComponent(...args)\n  }\n  unMount() {\n    const depsMap = Object.assign(\n      {},\n      this.dependencyTrackersDependencyMaps.state,\n      this.tagsDependencyMap\n    )\n    this.controller.componentDependencyStore.removeEntity(this, depsMap)\n\n    if (this.controller.devtools) {\n      this.controller.devtools.updateComponentsMap(this, null, depsMap)\n    }\n\n    this.isUnmounted = true\n  }\n  onPropsUpdate(props, nextProps) {\n    if (this.controller.devtools) {\n      this.verifyProps(nextProps)\n    }\n\n    const propsChanges = getChangedProps(props, nextProps)\n    if (propsChanges.length) {\n      this.updateFromProps(propsChanges, nextProps)\n\n      return true\n    }\n\n    return false\n  }\n  /*\n    Called by component when props are passed from parent and they\n    have changed. In this situation both tags and depndency trackers might\n    be affected. Tags are just updated and dependency trackers are matched\n    on props changed\n  */\n  updateFromProps(propsChanges, props) {\n    this.update(props, this.updateDependencyTrackers({}, propsChanges, props))\n  }\n  /*\n    Called by Container when the components state dependencies\n    has changed. In this scenario we need to run any dependencyTrackers\n    that matches the state changes. There is no need to update the tags\n    as their declared state deps can not change\n  */\n  updateFromState(stateChanges, props, force) {\n    this.update(\n      props,\n      force\n        ? this.forceUpdateDependencyTrackers()\n        : this.updateDependencyTrackers(stateChanges, {}, props)\n    )\n  }\n  /*\n    Udpates the dependency trackers by checking state\n    changes and props changes\n  */\n  updateDependencyTrackers(stateChanges, propsChanges, props) {\n    const hasChanged = Object.keys(this.dependencyTrackers).reduce(\n      (hasChanged, key) => {\n        if (this.dependencyTrackers[key].match(stateChanges, propsChanges)) {\n          this.dependencyTrackers[key].run(this.stateGetter, props)\n\n          return true\n        }\n\n        return hasChanged\n      },\n      false\n    )\n\n    return hasChanged\n  }\n  /*\n    Run update, re-evaluating the tags and computed, if neccessary\n  */\n  update(props, hasChangedDependencyTrackers) {\n    const prevDependencyTrackersDependencyMaps = this\n      .dependencyTrackersDependencyMaps\n    const previousTagsDependencyMap = this.tagsDependencyMap\n\n    this.tagsDependencyMap = this.getTagsDependencyMap(props)\n    this.dependencyTrackersDependencyMaps = hasChangedDependencyTrackers\n      ? this.getDependencyTrackersDependencyMaps(props)\n      : this.dependencyTrackersDependencyMaps\n\n    const prevDepsMap = Object.assign(\n      {},\n      prevDependencyTrackersDependencyMaps.state,\n      previousTagsDependencyMap\n    )\n    const nextDepsMap = Object.assign(\n      {},\n      this.dependencyTrackersDependencyMaps.state,\n      this.tagsDependencyMap\n    )\n    this.controller.componentDependencyStore.updateEntity(\n      this,\n      prevDepsMap,\n      nextDepsMap\n    )\n\n    if (this.controller.devtools) {\n      this.controller.devtools.updateComponentsMap(\n        this,\n        nextDepsMap,\n        prevDepsMap\n      )\n    }\n  }\n  /*\n    Forces update of all computed\n  */\n  forceUpdateDependencyTrackers() {\n    Object.keys(this.dependencyTrackers).forEach((key) => {\n      this.dependencyTrackers[key].run(this.stateGetter, this.props)\n    })\n\n    return true\n  }\n  /*\n    Go through dependencies and identify state trackers and\n    merge in their state dependencies\n  */\n  getDependencyTrackersDependencyMaps(props) {\n    return Object.keys(this.dependencies).reduce(\n      (currentDepsMaps, propKey) => {\n        if (this.dependencyTrackers[propKey]) {\n          currentDepsMaps.state = Object.assign(\n            currentDepsMaps.state,\n            this.dependencyTrackers[propKey].stateTrackFlatMap\n          )\n          currentDepsMaps.props = Object.assign(\n            currentDepsMaps.props,\n            this.dependencyTrackers[propKey].propsTrackFlatMap\n          )\n\n          return currentDepsMaps\n        }\n\n        return currentDepsMaps\n      },\n      {\n        state: {},\n        props: {},\n      }\n    )\n  }\n  /*\n    Go through dependencies and extract tags related to state\n    dependencies\n  */\n  getTagsDependencyMap(props) {\n    return Object.keys(this.dependencies).reduce((currentDepsMap, propKey) => {\n      if (this.dependencyTrackers[propKey]) {\n        return currentDepsMap\n      }\n\n      if (!this.dependencies[propKey].getTags) {\n        throwError(`Prop '${propKey}' should be a tag or a Compute.`)\n      }\n\n      const getters = this.createTagGetters(props)\n\n      return this.dependencies[propKey]\n        .getTags(getters)\n        .reduce((updatedCurrentDepsMap, tag) => {\n          if (tag.type === 'state') {\n            const path = tag.getPath(getters)\n            const strictPath = ensureStrictPath(path, this.stateGetter(path))\n\n            updatedCurrentDepsMap[strictPath] = true\n          }\n\n          return updatedCurrentDepsMap\n        }, currentDepsMap)\n    }, {})\n  }\n  /*\n    Creates getters passed into tags\n  */\n  createTagGetters(props) {\n    return {\n      state: this.stateGetter,\n      props: props,\n      signal: this.signalGetter,\n      signals: this.signalsGetter,\n    }\n  }\n  /*\n    Runs whenever the component has an update and renders.\n    Extracts the actual values from dependency trackers and/or tags\n  */\n  getProps(props = {}, includeProps = true) {\n    const dependenciesProps = Object.keys(this.dependencies).reduce(\n      (currentProps, key) => {\n        if (this.dependencyTrackers[key]) {\n          currentProps[key] = this.dependencyTrackers[key].value\n        } else {\n          const tag = this.dependencies[key]\n          const getters = this.createTagGetters(props)\n\n          if (tag.type === 'state') {\n            const path = tag.getPath(getters)\n            const value = this.stateGetter(path)\n            if (path.substr(path.length - 2, 2) === '.*') {\n              currentProps[key] = value ? Object.keys(value) : []\n            } else {\n              currentProps[key] = value\n            }\n          } else {\n            currentProps[key] = tag.getValue(getters)\n          }\n        }\n\n        return currentProps\n      },\n      {}\n    )\n\n    if (\n      this.controller.devtools &&\n      this.controller.devtools.bigComponentsWarning &&\n      !this._hasWarnedBigComponent &&\n      Object.keys(this.dependencies).length >=\n        this.controller.devtools.bigComponentsWarning\n    ) {\n      console.warn(\n        `Component named ${\n          this._displayName\n        } has a lot of dependencies, consider refactoring or adjust this option in devtools`\n      )\n      this._hasWarnedBigComponent = true\n    }\n\n    if (this.mergeProps) {\n      return this.mergeProps(\n        dependenciesProps,\n        props,\n        createResolver(this.createTagGetters(props))\n      )\n    }\n\n    return Object.assign({}, includeProps ? props : {}, dependenciesProps)\n  }\n}\n\nexport default View\n"]}