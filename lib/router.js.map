{"version":3,"sources":["../src/router.js"],"names":["Router","controller","addressbar","mapper","options","activeRoute","stateGetter","getState","bind","providers","router","getUrl","getPath","getValues","getOrigin","setUrl","goTo","redirect","redirectToSignal","reload","baseUrl","onlyHash","pathname","on","routesConfig","routes","routesBySignal","onUrlChange","onSignalStart","onFlush","preventAutostart","url","path","replace","origin","indexOf","event","getRoutablePart","target","value","match","route","values","mapped","map","err","Error","allowEscape","preventDefault","console","warn","computedRMapping","propsMapping","signal","stateMapping","payload","Object","keys","reduce","cleanedPayload","key","undefined","getters","props","state","runSignal","resolve","forEach","get","set","tracker","run","mappedPayload","prevSignal","getSignal","execution","name","stringify","resolved","getValue","filterFalsy","changed","computedMapping","shouldUpdate","resolvedMap","trackerHandle","needsInit","assign","split","signalName"],"mappings":"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","file":"router.js","sourcesContent":["import { Provider } from 'cerebral'\nimport { getChangedProps } from 'cerebral/internal'\nimport {\n  computeShouldChange,\n  flattenConfig,\n  hasChangedPath,\n  getRoutesBySignal,\n  verifyOptions,\n} from './utils'\n\nexport default class Router {\n  constructor(controller, addressbar, mapper, options) {\n    this.controller = controller\n    this.addressbar = addressbar\n    this.mapper = mapper\n    this.options = verifyOptions(options)\n    this.activeRoute = {}\n    this.stateGetter = this.controller.getState.bind(this.controller)\n\n    this.providers = {\n      router: Provider({\n        getUrl: this.getUrl.bind(this),\n        getPath: this.getPath.bind(this),\n        getValues: this.getValues.bind(this),\n        getOrigin: this.getOrigin.bind(this),\n        setUrl: this.setUrl.bind(this),\n        goTo: this.goTo.bind(this),\n        redirect: this.redirect.bind(this),\n        redirectToSignal: this.redirectToSignal.bind(this),\n        reload: this.reload.bind(this),\n      }),\n    }\n\n    if (!this.options.baseUrl && options.onlyHash) {\n      // autodetect baseUrl\n      this.options.baseUrl = addressbar.pathname\n    }\n    this.options.baseUrl =\n      this.options.baseUrl + (this.options.onlyHash ? '#' : '')\n\n    controller.on('initialized', () => {\n      this.routesConfig = flattenConfig(options.routes)\n      this.routesBySignal = getRoutesBySignal(this.routesConfig)\n\n      addressbar.on('change', this.onUrlChange.bind(this))\n      controller.on('start', this.onSignalStart.bind(this))\n      controller.on('flush', this.onFlush.bind(this))\n\n      if (!options.preventAutostart) {\n        this.onUrlChange()\n      }\n    })\n  }\n\n  addRoutes(routes) {\n    this.options.routes = [...routes, ...this.options.routes]\n    this.routesConfig = flattenConfig(this.options.routes)\n    this.routesBySignal = getRoutesBySignal(this.routesConfig, this.controller)\n  }\n\n  getRoutablePart(url) {\n    let path = url.replace(this.addressbar.origin, '')\n    if (path[0] !== '/') {\n      path = '/' + path\n    }\n    if (this.options.onlyHash && !~path.indexOf('#')) {\n      // treat hash absense as root route\n      path = path + '#/'\n    }\n    return path.indexOf(this.options.baseUrl) === 0\n      ? path.replace(this.options.baseUrl, '')\n      : null\n  }\n\n  onUrlChange(event) {\n    const url = this.getRoutablePart(\n      event ? event.target.value : this.addressbar.value\n    )\n    if (url === null) return\n\n    let match, route, values\n    try {\n      const mapped = this.mapper.map(url, this.routesConfig) || {}\n      match = mapped.match\n      route = mapped.route\n      values = mapped.values\n    } catch (err) {\n      throw new Error('Could not parse url (' + err + ').')\n    }\n\n    if (!match) {\n      if (this.options.allowEscape) return\n\n      event && event.preventDefault()\n      console.warn(\n        `Cerebral router - No route matched ${url}, navigation was prevented. Please verify url or catch unmatched routes with a \"/*\" route.`\n      ) // eslint-disable-line no-console\n      return\n    }\n\n    event && event.preventDefault()\n    const { computedRMapping, map, propsMapping, signal, stateMapping } = match\n\n    // remove undefined values from payload\n    // TODO: can be replaced with next line when fixed in url-mapper\n    // let payload = values\n    let payload = Object.keys(values).reduce((cleanedPayload, key) => {\n      if (values[key] !== undefined) {\n        cleanedPayload[key] = values[key]\n      }\n      return cleanedPayload\n    }, {})\n\n    const getters = { props: payload, state: this.stateGetter }\n\n    if (stateMapping || computedRMapping) {\n      this.controller.runSignal('router.routed', [\n        ({ state, resolve }) => {\n          if (stateMapping) {\n            stateMapping.forEach((key) => {\n              const value = values[key] || state.get(resolve.path(map[key]))\n              state.set(\n                resolve.path(map[key]),\n                value === undefined ? null : value\n              )\n            })\n          }\n          if (computedRMapping) {\n            Object.keys(computedRMapping).forEach((path) => {\n              const { tracker } = computedRMapping[path]\n              tracker.run(this.stateGetter, values)\n\n              const value = tracker.value\n              state.set(path, value === undefined ? null : value)\n            })\n          }\n        },\n      ])\n    }\n\n    if (propsMapping) {\n      payload = propsMapping.reduce((mappedPayload, key) => {\n        mappedPayload[map[key].getPath(getters)] = values[key] || null\n        return mappedPayload\n      }, {})\n    }\n\n    const prevSignal = (this.routesConfig[this.activeRoute.route] || {}).signal\n    if (\n      signal &&\n      (prevSignal !== signal ||\n        getChangedProps(payload || {}, this.activeRoute.payload || {}))\n    ) {\n      this.controller.getSignal(signal)(payload)\n    }\n\n    this.activeRoute = { route, payload }\n  }\n\n  onSignalStart(execution, payload) {\n    const route = this.routesBySignal[execution.name]\n    if (!route) return\n\n    const { map } = this.routesConfig[route]\n    const getters = { props: payload, state: this.stateGetter }\n\n    // resolve mappings on current props and state\n    const url = this.mapper.stringify(\n      route,\n      map\n        ? Object.keys(map || {}).reduce((resolved, key) => {\n            const value = map[key].getValue(getters)\n\n            if (this.options.filterFalsy && !value) {\n              return resolved\n            }\n\n            resolved[key] = value\n            return resolved\n          }, {})\n        : payload\n    )\n\n    this.setUrl(url)\n\n    this.activeRoute = { route, payload }\n  }\n\n  onFlush(changed) {\n    const { route, payload } = this.activeRoute\n    const { map, stateMapping, computedMapping } =\n      this.routesConfig[route] || {}\n    if (!stateMapping && !computedMapping) return\n    const getters = { props: payload, state: this.stateGetter }\n    let shouldUpdate = false\n\n    const resolvedMap = Object.keys(map || {}).reduce((resolved, key) => {\n      let value\n\n      if (computedMapping && computedMapping[key]) {\n        const trackerHandle = computedMapping[key]\n        const { needsInit, tracker } = trackerHandle\n\n        if (needsInit || computeShouldChange(tracker, changed)) {\n          trackerHandle.needsInit = false\n          tracker.run(this.stateGetter, payload)\n          shouldUpdate = true\n        }\n\n        value = tracker.value\n      } else {\n        const path = map[key].getPath(getters)\n        value = map[key].getValue(getters)\n\n        shouldUpdate =\n          shouldUpdate ||\n          (stateMapping.indexOf(key) >= 0 && hasChangedPath(changed, path))\n      }\n\n      if (!this.options.filterFalsy || value) {\n        // Cerebral state only supports null and url-mapper only supports\n        // undefined: so we map from one to the other here.\n        resolved[key] = value === null ? undefined : value\n      }\n\n      return resolved\n    }, {})\n\n    if (shouldUpdate) {\n      this.setUrl(this.mapper.stringify(route, Object.assign({}, resolvedMap)))\n    }\n  }\n\n  setUrl(url) {\n    this.addressbar.value = this.options.baseUrl + url || '/'\n  }\n\n  getUrl() {\n    return this.addressbar.value\n  }\n\n  getPath() {\n    return this.addressbar.value\n      .replace(this.addressbar.origin + this.options.baseUrl, '')\n      .split('?')[0]\n  }\n\n  getValues() {\n    const url = this.getRoutablePart(this.addressbar.value)\n    const mapped = this.mapper.map(url, this.routesConfig) || {}\n\n    return mapped.values\n  }\n\n  getOrigin() {\n    return this.addressbar.origin\n  }\n\n  goTo(url) {\n    this.addressbar.value = this.options.baseUrl + url\n    this.onUrlChange()\n  }\n\n  redirect(url) {\n    this.addressbar.value = {\n      value: this.options.baseUrl + url,\n      replace: true,\n    }\n\n    this.onUrlChange()\n  }\n\n  redirectToSignal(signalName, payload) {\n    const route = this.routesBySignal[signalName]\n    if (!route) {\n      console.warn(\n        `redirectToSignal: signal '${signalName}' not bound to route.`\n      )\n    }\n    this.controller.getSignal(signalName)(payload)\n  }\n\n  reload() {\n    this.redirect(this.getUrl())\n  }\n}\n"]}