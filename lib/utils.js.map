{"version":3,"sources":["../src/utils.js"],"names":["flattenConfig","getRoutesBySignal","hasChangedPath","computeShouldChange","verifyOptions","compatConfig","config","prev","concat","Object","keys","map","key","conf","path","signal","Array","isArray","reduce","flattened","routes","rmap","assign","currentPath","stateMapping","filter","type","length","computedKeys","computedMapping","mapping","tracker","needsInit","propsMapping","Error","computedRmapKeys","computedRMapping","routableSignals","route","signalName","changes","change","join","changed","stateTrackMap","ensureBaseUrl","url","options","baseUrl"],"mappings":"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","file":"utils.js","sourcesContent":["import {\n  ComputeClass,\n  DependencyTracker,\n  dependencyMatch,\n} from 'cerebral/internal'\n\nfunction compatConfig(config, prev = '') {\n  return [].concat(\n    ...Object.keys(config).map((key) => {\n      const conf = config[key]\n      if (typeof conf === 'string') {\n        return [{ path: prev + key, signal: conf }]\n      }\n      return compatConfig(conf, prev + key)\n    })\n  )\n}\n\nexport function flattenConfig(config, prev = '') {\n  if (!Array.isArray(config)) {\n    config = compatConfig(config)\n  }\n  return config.reduce((flattened, { map, path, routes, rmap, signal }) => {\n    if (routes) {\n      Object.assign(flattened, flattenConfig(routes, prev + path))\n    }\n\n    const currentPath = prev + path\n    const conf = { signal }\n    if (map) {\n      conf.map = map\n      const stateMapping = Object.keys(map).filter(\n        (key) => map[key].type === 'state'\n      )\n      if (stateMapping.length) {\n        conf.stateMapping = stateMapping\n      }\n\n      const computedKeys = Object.keys(map).filter(\n        (key) => map[key] instanceof ComputeClass\n      )\n      if (computedKeys.length) {\n        conf.computedMapping = computedKeys.reduce((mapping, key) => {\n          const tracker = new DependencyTracker(map[key])\n          // We have to wait until we have access to controller before\n          // doing the first run.\n          mapping[key] = { tracker, needsInit: true }\n          return mapping\n        }, {})\n      }\n\n      const propsMapping = Object.keys(map).filter(\n        (key) => map[key].type === 'props'\n      )\n      if (propsMapping.length) {\n        conf.propsMapping = propsMapping\n        if (!signal) {\n          throw new Error(\n            `Cerebral router - route ${currentPath} has props mappings but no signal was defined.`\n          )\n        }\n      }\n    }\n\n    const computedRmapKeys = Object.keys(rmap || {}).filter(\n      (key) => rmap[key] instanceof ComputeClass\n    )\n\n    if (computedRmapKeys.length) {\n      conf.rmap = rmap\n      conf.computedRMapping = computedRmapKeys.reduce((mapping, key) => {\n        const tracker = new DependencyTracker(rmap[key])\n        // We have to wait until we have access to controller before\n        // doing the first run.\n        mapping[key] = { tracker, needsInit: true }\n        return mapping\n      }, {})\n    }\n\n    flattened[currentPath] = conf\n\n    return flattened\n  }, {})\n}\n\nexport function getRoutesBySignal(config) {\n  return Object.keys(config).reduce((routableSignals, route) => {\n    const { signal: signalName } = config[route]\n\n    if (!signalName) {\n      return routableSignals\n    }\n\n    if (routableSignals[signalName]) {\n      throw new Error(\n        `Cerebral router - The signal ${signalName} has already been bound to route ${route}. Create a new signal and reuse actions instead if needed.`\n      )\n    }\n\n    routableSignals[signalName] = route\n\n    return routableSignals\n  }, {})\n}\n\nexport function hasChangedPath(changes, path) {\n  for (let change in changes) {\n    if (changes[change].path.join('.') === path) {\n      return true\n    }\n  }\n}\n\nexport function computeShouldChange(tracker, changed) {\n  return dependencyMatch(changed, tracker.stateTrackMap).length > 0\n}\n\nfunction ensureBaseUrl(url) {\n  if (!url) {\n    return ''\n  }\n\n  return url[0] === '/' ? url : '/' + url\n}\n\nexport function verifyOptions(options) {\n  return Object.assign(options, {\n    baseUrl: ensureBaseUrl(options.baseUrl),\n  })\n}\n"]}