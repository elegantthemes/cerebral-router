{"version":3,"sources":["../src/base.js"],"names":["options","mapper","map","Error","router","routerModule","controller","addressbar","getSignalUrl","signalPath","payload","baseUrl","stringify","routesBySignal","addRoutes","routes","require","e","pathname","value","origin","on","removeListener"],"mappings":";;;;;;kBAgBe,YAAuB;AAAA,MAAdA,OAAc,uEAAJ,EAAI;;AACpC,MAAI,CAACA,QAAQC,MAAT,IAAmB,OAAOD,QAAQC,MAAR,CAAeC,GAAtB,KAA8B,UAArD,EAAiE;AAC/D,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,MAAIC,eAAJ;;AAEA,MAAMC,eAAe,sBAAO,gBAAoB;AAAA,QAAjBC,UAAiB,QAAjBA,UAAiB;;AAC9C,WAAQF,SAAS,qBACfE,UADe,EAEfC,UAFe,EAGfP,QAAQC,MAHO,EAIfD,OAJe,CAAjB;AAMD,GAPoB,CAArB;;AASAK,eAAaG,YAAb,GAA4B,SAASA,YAAT,CAAsBC,UAAtB,EAAkCC,OAAlC,EAA2C;AACrE,WACEV,QAAQW,OAAR,GACAX,QAAQC,MAAR,CAAeW,SAAf,CAAyBR,OAAOS,cAAP,CAAsBJ,UAAtB,CAAzB,EAA4DC,WAAW,EAAvE,CAFF;AAID,GALD;;AAOAL,eAAaS,SAAb,GAAyB,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AAClD,WAAOX,OAAOU,SAAP,CAAiBC,MAAjB,CAAP;AACD,GAFD;;AAIA,SAAOV,YAAP;AACD,C;;AA5CD;;AACA;;;;;;AAEA,IAAIE,mBAAJ;AACA,IAAI;AACFA,eAAaS,QAAQ,YAAR,CAAb;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;AACVV,eAAa;AACXW,cAAU,GADC;AAEXC,WAAO,EAFI;AAGXC,YAAQ,EAHG;AAIXC,MAJW,gBAIN,CAAE,CAJI;AAKXC,kBALW,4BAKM,CAAE;AALR,GAAb;AAOD","file":"base.js","sourcesContent":["import { Module } from 'cerebral'\nimport Router from './router'\n\nlet addressbar\ntry {\n  addressbar = require('addressbar')\n} catch (e) {\n  addressbar = {\n    pathname: '/',\n    value: '',\n    origin: '',\n    on() {},\n    removeListener() {},\n  }\n}\n\nexport default function(options = {}) {\n  if (!options.mapper || typeof options.mapper.map !== 'function') {\n    throw new Error('Cerebral router - mapper option must be provided.')\n  }\n\n  let router\n\n  const routerModule = Module(({ controller }) => {\n    return (router = new Router(\n      controller,\n      addressbar,\n      options.mapper,\n      options\n    ))\n  })\n\n  routerModule.getSignalUrl = function getSignalUrl(signalPath, payload) {\n    return (\n      options.baseUrl +\n      options.mapper.stringify(router.routesBySignal[signalPath], payload || {})\n    )\n  }\n\n  routerModule.addRoutes = function addRoutes(routes) {\n    return router.addRoutes(routes)\n  }\n\n  return routerModule\n}\n"]}